# unicorn.rb
listen "<%= @socket_location %>", backlog: <%= @backlog %>

working_directory "<%= @path %>/current"
stderr_path "<%= @path %>/shared/log/unicorn.stderr.log"
stdout_path "<%= @path %>/shared/log/unicorn.stdout.log"
pid         "<%= @path %>/shared/pids/unicorn.pid"

Unicorn::HttpServer::START_CTX[0] = "<%= @path %>/shared/bin/unicorn.sh"

before_exec do |server|
  ENV['BUNDLE_GEMFILE'] = "<%= @path %>/current/Gemfile"
  # must be .to_s (string's) for assignment to ENV to work
  ENV['RUBY_GC_MALLOC_LIMIT'] = 80_000_000.to_s
end

timeout <%= @worker_timeout %>
worker_processes <%= @worker_processes %>

preload_app true

before_fork do |server, worker|
  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.connection.disconnect!

  old_pid = "#{server.config[:pid]}.oldbin"
  if old_pid != server.pid
    begin
      # each new worker under new master tells old master to decrease a worker
      sig = (worker.nr + 1) >= server.worker_processes ? :QUIT : :TTOU
      Process.kill(sig, File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
    end
  end

  # throttle master from forking too quickly by sleeping
  sleep 1
end

after_fork do |server, worker|
  if defined?(ActiveRecord::Base) 
    ActiveRecord::Base.establish_connection
  end
end
